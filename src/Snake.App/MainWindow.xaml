<Controls:MetroWindow x:Class="Snake.App.MainWindow"
                      xmlns:app="clr-namespace:Snake.App"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                      xmlns:SnakeViews="clr-namespace:Snake.App.Module.Views"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      Title="Snake Log Application"
                      d:DataContext="{d:DesignInstance app:MainWindowViewModel}"
                      Width="1200"
                      Height="900"
                      d:DesignHeight="600"
                      d:DesignWidth="800"
                      Closing="MetroWindow_Closing"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      Icon="favicon.ico"
                      NonActiveGlowBrush="#CDFF0000"
                      ShowIconOnTitleBar="True"
                      ShowTitleBar="True"
                      WindowStartupLocation="CenterScreen"
                      mc:Ignorable="d" WindowState="Maximized">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenuTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  This is the template for the menu items.  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <ObjectDataProvider x:Key="DisplayModeEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Controls:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Controls:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="VisibilityEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <materialDesignConverters:BrushRoundConverter x:Key="BrushRoundConverter" />

            <Style x:Key="HamburgerMenuCreatorsItemStyle"
                   BasedOn="{StaticResource HamburgerMenuItemStyle}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle x:Name="SelectionIndicator"
                                                   Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                                   Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                                   Fill="{TemplateBinding Foreground}"
                                                   Focusable="False"
                                                   Opacity="0.0" />
                                    </Grid>
                                    <materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                           Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                           Focusable="False"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type Controls:HamburgerMenu}}"
                   TargetType="{x:Type Controls:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
            </Style>

            <Ellipse x:Key="AppThemeMenuIcon"
                     Width="16"
                     Height="16"
                     x:Shared="False"
                     Fill="{Binding ColorBrush, Mode=OneWay}"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     StrokeThickness="1" />

            <Style x:Key="AppThemeMenuItemStyle"
                   BasedOn="{StaticResource MetroMenuItem}"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
                <Setter Property="Icon" Value="{StaticResource AppThemeMenuIcon}" />
            </Style>

            <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>
        </ResourceDictionary>
    </Window.Resources>

    <Controls:MetroWindow.WindowButtonCommands>
        <Controls:WindowButtonCommands Style="{DynamicResource MahApps.Metro.Styles.WindowButtonCommands.Win10}" />
    </Controls:MetroWindow.WindowButtonCommands>

    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Button Click="LaunchMahAppsOnGitHub" ToolTip="Snake on GitHub">
                <iconPacks:PackIconModern Width="22"
                                          Height="22"
                                          Kind="SocialGithubOctocat" />
            </Button>
            <Button Click="LaunchIcons"
                    Content="Thanks"
                    ToolTip="Thanks For MahApps" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands ShowLastSeparator="False">
            <Menu Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                <MenuItem Header="Theme"
                      ItemContainerStyle="{StaticResource AppThemeMenuItemStyle}"
                      ItemsSource="{Binding AppThemes, Mode=OneWay}" />
            </Menu>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
                Margin="1 10 0 10"
                BorderBrush="{DynamicResource GrayBrush7}"
                BorderThickness="1">

            <Controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                    HamburgerWidth="48"
                                    IsPaneOpen="True"
                                    ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                    ItemTemplate="{StaticResource MenuItemTemplate}"
                                    OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                    SelectedIndex="0"
                                    Style="{StaticResource HamburgerMenuCreatorsStyle}"
                                    VerticalScrollBarOnLeftSide="False">
                <!--  Items  -->
                <Controls:HamburgerMenu.ItemsSource>
                    <Controls:HamburgerMenuItemCollection>
                        <Controls:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Home}" Label="首页">
                            <Controls:HamburgerMenuIconItem.Tag>
                                <UserControl>
                                    <StackPanel Orientation="Vertical">
                                        <Label Content="Snake Log" FontSize="20" />
                                        <RichTextBox Margin="{StaticResource ControlMargin}" Padding="5" BorderThickness="0" IsDocumentEnabled="True" SpellCheck.IsEnabled="False">
                                            <FlowDocument>
                                                <Paragraph>
                                                    <Hyperlink NavigateUri="https://github.com/yepeng2002/Snake">
                                                        <Run Text="Snake Github Website" />
                                                    </Hyperlink>
                                                    <LineBreak />
                                                    <Run>Snake是基于C#开发的日志监控分析和api调用性能日志分析平台.</Run>
                                                </Paragraph>
                                            </FlowDocument>
                                        </RichTextBox>
                                    </StackPanel>
                                </UserControl>
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>
                        <Controls:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Eye}" Label="应用日志分析">
                            <Controls:HamburgerMenuIconItem.Tag>
                                <SnakeViews:AppLogQueryView />
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>
                        <Controls:HamburgerMenuIconItem Icon="{iconPacks:SimpleIcons Kind=Joomla}" Label="Api监控日志">
                            <Controls:HamburgerMenuIconItem.Tag>
                                <SnakeViews:TrackLogQueryView />
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>
                    </Controls:HamburgerMenuItemCollection>
                </Controls:HamburgerMenu.ItemsSource>

                <!--  Options  -->
                <Controls:HamburgerMenu.OptionsItemsSource>
                    <Controls:HamburgerMenuItemCollection>
                        <Controls:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Settings}" Label="Settings">
                            <Controls:HamburgerMenuIconItem.Tag>
                                <UserControl>
                                    <StackPanel Orientation="Vertical">
                                        <Controls:ToggleSwitch Margin="0 0 0 5" Header="Abstract" />
                                        <Controls:ToggleSwitch Margin="0 0 0 5" Header="test" IsChecked="True" />
                                        <Controls:ToggleSwitch Margin="0 0 0 5" Header="Pellentesque ultricies metus quis dui luctus, vel faucibus risus rhoncus" />
                                    </StackPanel>
                                </UserControl>
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>
                    </Controls:HamburgerMenuItemCollection>
                </Controls:HamburgerMenu.OptionsItemsSource>

                <Controls:HamburgerMenu.ContentTemplate>
                    <DataTemplate DataType="{x:Type Controls:HamburgerMenuIconItem}">
                        <Grid Margin="20 0 10 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0"
                                       Margin="0 15 0 5"
                                       Padding="0"
                                       FontFamily="{DynamicResource HeaderFontFamily}"
                                       FontSize="{DynamicResource HeaderFontSize}"
                                       Text="{Binding Label}" />
                            <ScrollViewer Grid.Row="1"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Disabled">
                                <ContentControl Content="{Binding Tag}" Focusable="False" />
                            </ScrollViewer>
                        </Grid>
                    </DataTemplate>
                </Controls:HamburgerMenu.ContentTemplate>

            </Controls:HamburgerMenu>

        </Border>
        <StatusBar Grid.Row="1">
            <StatusBarItem>Snake Log Application</StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem Content="{Binding StatusContent}"></StatusBarItem>
            <StatusBarItem Content="{Binding ElementName=MainTabControl, Path=SelectedItem.Header, Mode=OneWay}" />
        </StatusBar>

    </Grid>
</Controls:MetroWindow>